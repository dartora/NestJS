import { Test, TestingModule } from '@nestjs/testing';
import { UsersController } from './user.controller';
import { UsersService } from './user.service';
import { CreateUserDto } from './dto/create-user.dto';
import { User } from './entities/user.entity';

describe('UsersController', () => {
  let controller: UsersController;
  let userService: UsersService;

  beforeEach(async () => {
    const module: TestingModule = await Test.createTestingModule({
      controllers: [UsersController],
      providers: [UsersService],
    }).compile();

    controller = module.get<UsersController>(UsersController);
    userService = module.get<UsersService>(UsersService);
  });

  it('should be defined', () => {
    expect(controller).toBeDefined();
  });

  describe('create', () => {
    it('should create a user', async () => {
      const createUserDto: CreateUserDto = {
        // Provide necessary data for creating a user
        name: 'John Doe',
        username: 'johndoe123',
        email: 'johndoe@example.com',
        age: 30,
        gender: 'm',
        password: 'P@ssw0rd',
      };

      const createdUser: User = {
        // Mock the created user object
        id: 1,
        ...createUserDto,
      };

      jest.spyOn(userService, 'createUser').mockResolvedValue(createdUser);

      const result = await controller.create(createUserDto);

      expect(result).toBe(createdUser);
    });
  });

  describe('findAll', () => {
    it('should return an array of users', async () => {
      const users: User[] = [
        // Mock an array of users
      ];

      jest.spyOn(userService, 'findAllUsers').mockResolvedValue(users);

      const result = await controller.findAll();

      expect(result).toBe(users);
    });
  });

  // Add similar test cases for other controller endpoints
});
